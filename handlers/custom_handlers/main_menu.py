import datetime
import time
import telebot
from telebot import types
from loader import bot
from telebot import types
import requests
import json
import os
from . import get_high_request
from . import get_low_request
from . import get_castom_daydata
from dotenv import load_dotenv, find_dotenv


api_token = os.getenv("RAPID_API_KEY")
today = datetime.date.today()
print('main_menu Ready')
tomorrow = today + datetime.timedelta(days=1)
root_link = 'https://www.aviasales.ru'


def construct_answer(data):

    departure_at = data['data'][0]['departure_at']
    price = data['data'][0]['price']
    end_link = root_link + data['data'][0]['link']
    result = '–ù–∞—à–µ–ª —Ä–µ–π—Å –°–æ—á–∏ -> –ë–µ–ª–≥—Ä–∞–¥:\n' \
             '–î–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è:{}\n' \
             '–¶–µ–Ω–∞:{} —Ä—É–±.\n' \
             '–°—Å—ã–ª–∫–∞: {}'.format(departure_at, price, end_link)
    return result


@bot.message_handler(content_types=['text'])
def main_menu(message):
    if message.text == 'üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è' or message.text == '–ù–∞–∑–∞–¥':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('–ë–ª–∏–∂–∞–π—à–∏–π —Å–∞–º–æ–ª–µ—Ç –°–æ—á–∏ -> –ë–µ–ª–≥—Ä–∞–¥ –Ω–∞ –∑–∞–≤—Ç—Ä–∞')
        markup.add(btn1)
        bot.send_message(message.from_user.id, '‚ùì –ó–∞–¥–∞–π—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å', reply_markup=markup)

    elif message.text == '–ë–ª–∏–∂–∞–π—à–∏–π —Å–∞–º–æ–ª–µ—Ç –°–æ—á–∏ -> –ë–µ–ª–≥—Ä–∞–¥ –Ω–∞ –∑–∞–≤—Ç—Ä–∞':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('Low')
        btn2 = types.KeyboardButton('High')
        btn3 = types.KeyboardButton('Custom')
        btn4 = types.KeyboardButton('History')
        btn5 = types.KeyboardButton('–ù–∞–∑–∞–¥')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_message(message.from_user.id, '‚ùì –ö–∞–∫–æ–π –∑–∞–ø—Ä–æ—Å –Ω—É–∂–µ–Ω?', reply_markup=markup)

    elif message.text == 'Low':
        bot.register_next_step_handler(message, get_low_request)

    elif message.text == 'High':
        bot.register_next_step_handler(message, get_high_request)

    elif message.text == 'Custom':
        bot.register_next_step_handler(message, get_castom_daydata)

    elif message.text == 'History':
        bot.send_message(message.from_user.id, '–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –∑–∞–ø—Ä–æ—Å–æ–≤', parse_mode='Markdown')
        bot.send_message(message.from_user.id, '–ü–æ–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç', parse_mode='Markdown')
